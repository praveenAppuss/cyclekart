# Generated by Django 5.2.3 on 2025-08-06 05:02

from django.db import migrations

def populate_cartitem_variants(apps, schema_editor):
    CartItem = apps.get_model('userapp', 'CartItem')
    ProductColorVariant = apps.get_model('adminapp', 'ProductColorVariant')
    ProductSizeStock = apps.get_model('adminapp', 'ProductSizeStock')

    for cart_item in CartItem.objects.all():
        try:
            # Map color to color_variant
            if cart_item.color:
                color_variant = ProductColorVariant.objects.get(
                    product=cart_item.product,
                    name=cart_item.color
                )
                cart_item.color_variant = color_variant
            else:
                print(f"CartItem {cart_item.id} has no color, skipping color_variant.")

            # Map size to size_stock (only if color_variant is set)
            if cart_item.size and cart_item.color_variant:
                size_stock = ProductSizeStock.objects.get(
                    color_variant=cart_item.color_variant,
                    size=cart_item.size
                )
                cart_item.size_stock = size_stock
            else:
                print(f"CartItem {cart_item.id} has no size or color_variant, skipping size_stock.")

            cart_item.save()
        except (ProductColorVariant.DoesNotExist, ProductSizeStock.DoesNotExist) as e:
            print(f"Error mapping CartItem {cart_item.id}: {e}")
            # Optionally delete invalid CartItem rows
            # cart_item.delete()

def reverse_populate_cartitem_variants(apps, schema_editor):
    CartItem = apps.get_model('userapp', 'CartItem')
    CartItem.objects.update(color_variant=None, size_stock=None)

class Migration(migrations.Migration):

    dependencies = [
        ('userapp', '0019_cartitem_color_variant_cartitem_size_stock'),
        ('adminapp', '0001_initial'),  # Adjust to the actual adminapp migration that defines ProductColorVariant and ProductSizeStock
    ]

    operations = [
        migrations.RunPython(populate_cartitem_variants, reverse_populate_cartitem_variants),
    ]